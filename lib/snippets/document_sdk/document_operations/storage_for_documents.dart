import 'package:scanbot_sdk/scanbot_sdk.dart';

Future<void> createDocument() async {
  var params = CreateDocumentParams();
  /** Create a document with a UUID */
  var document = await ScanbotSdk.document.createDocument(params);
}

Future<void> createDocumentWithPages(List<String> imageFileUris) async {
  /**
   * Create a document with a UUID
   * Add images from `imageFileUris` as document pages
   * */
  var params = CreateDocumentParams(
    imageFileUris: imageFileUris,
  );

  var document = await ScanbotSdk.document.createDocument(params);
}

Future<void> loadDocument(String documentID) async {
  /** Load a document from storage by ID */
  var document = await ScanbotSdk.document.loadDocument(documentID);
}

Future<void> storedDocumentUUIDs() async {
  /** Retrieve all the document IDs from the storage */
  var documentIds = await ScanbotSdk.document.storedDocumentIDs();
}

Future<void> reorderDocumentPages(String documentID) async {
  /** Load a document from storage by ID */
  var document = await ScanbotSdk.document.loadDocument(documentID);
  /** Swap the first and last page of the document */
  var params = MovePageParams(
    documentID: document.value!.uuid,
    fromIndex: 0,
    toIndex: document.value!.pages.length - 1
  );
  var documentWithReorderedPages = await ScanbotSdk.document.movePage(params);
}

Future<void> removeAllPagesFromDocument(String documentID) async {
  /** Remove all the pages from a document */
  var documentWithRemovedPages = await ScanbotSdk.document.removeAllPages(documentID);
}

Future<void> deleteDocument(String documentID) async {
  /** Delete a document from storage along with the document's PDF and TIFF files */
  await ScanbotSdk.document.deleteDocument(documentID);
}

Future<void> deleteAllDocuments() async {
  /** Delete all documents from storage along with the document's PDF and TIFF files */
  await ScanbotSdk.document.deleteAllDocuments();
}

Future<void> cleanup() async {
  /** Removes all the files generated by ScanbotSDK including the documents */
  await ScanbotSdk.cleanupStorage();
}
